/* tslint:disable */

/*
*  This rule been automatically generated by auth0-authz-extension
*  Updated by rory.webber@arup.com, 2019-01-04T10:26:06.157Z
*  Updated by jason.brewer@arup.com, 2019-01-24T10:54:06.157Z
 */

function (user, context, callback) {

  var request = require("request");

  var options = { method: 'POST',
  url: 'https://angular-authentication.eu.auth0.com/oauth/token',
  headers: { 'content-type': 'application/json' },
  body: 
   { grant_type: 'client_credentials',
     client_id: 'M0q1Dt5-1OPgqwG2xza_NsnMfYrH_hdD',
     client_secret: process.env.CLIENT_SECRET,
     audience: 'urn:auth0-authz-api'
     },
  json: true };

  var _ = require('lodash');
  var EXTENSION_URL = "https://angular-authentication.eu8.webtask.io/adf6e2f2b84784b57522e3b19dfc9201";

  var audience = '';
  audience = audience || (context.request && context.request.query && context.request.query.audience);
  if (audience === 'urn:auth0-authz-api') {
    return callback(new UnauthorizedError('no_end_users'));
  }

  audience = audience || (context.request && context.request.body && context.request.body.audience);
  if (audience === 'urn:auth0-authz-api') {
    return callback(new UnauthorizedError('no_end_users'));
  }

  request(options, function (error, response, body) {
    if (error) throw new Error(error);

    addUserToStandardRole(user, body.access_token, context, function(err, res, data) {
      if (err && res.statusCode !== 204) {
        console.log('Error from Authorization Extension 1:', err);
        return callback(new UnauthorizedError('Authorization Extension: ' + err.message));
      }
  
      if (res.statusCode !== 200 || res.statusCode !== 204) {
        console.log('Error from Authorization Extension 2:', res.body || res.statusCode);
        console.log('statusCode:',res.statusCode);
        console.log('validation error:', res.body);
        //console.log('body',res.body.text);
        return callback(
          new UnauthorizedError('Authorization Extension: ' + ((res.body && (res.body.message || res.body) || res.statusCode)))
        );
      }
      
      // console.log('roles: ', data);
  
      // Update the user object.
      user.permissions = data.permissions;
  
      return callback(null, user, context);
    });
  });

  // Get the policy for the user.
  function addUserToStandardRole(user, token, context, cb) {
    request.patch({
      url: EXTENSION_URL + "/api/users/" + user.user_id + "/roles",
      headers: {
        "Authorization": "Bearer " + token
      },
      json: ["23e24cbb-7149-420c-8b7a-84100b7904c3"],
      timeout: 5000
    }, cb);
  }
}